//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Es.Udc.DotNet.PracticaMaD.Model
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    public partial class Event
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Event()
        {
            this.Comment = new HashSet<Comment>();
            this.Recomendation = new HashSet<Recomendation>();
        }
    
        public long eventId { get; set; }
        public string eventName { get; set; }
        public string review { get; set; }
        public System.DateTime date { get; set; }
        public long categoryId { get; set; }
    
        public virtual Category Category { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Comment> Comment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Recomendation> Recomendation { get; set; }

        public override int GetHashCode()
        {
            unchecked
            {
                int multiplier = 31;
                int hash = GetType().GetHashCode();

                hash = hash * multiplier + eventId.GetHashCode();
                hash = hash * multiplier + (eventName == null ? 0 : eventName.GetHashCode());
                hash = hash * multiplier + (review == null ? 0 : review.GetHashCode());
                hash = hash * multiplier + categoryId.GetHashCode();

                return hash;
            }

        }

        public override bool Equals(object obj)
        {
            Event target = (Event)obj;

            return true
               && (this.eventId == target.eventId)
               && (this.eventName == target.eventName)
               && (this.review == target.review)
               && (this.categoryId == target.categoryId);

        }

        public override String ToString()
        {
            StringBuilder strUserProfile = new StringBuilder();

            strUserProfile.Append("[ ");
            strUserProfile.Append(" eventId = " + eventId + " | ");
            strUserProfile.Append(" eventName = " + eventName + " | ");
            strUserProfile.Append(" review = " + review + " | ");
            strUserProfile.Append(" categoryId = " + categoryId + " | ");
            strUserProfile.Append("] ");

            return strUserProfile.ToString();
        }

    }
}
